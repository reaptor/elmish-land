//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by elmish-land.
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElmishLand

open System.Runtime.CompilerServices
open Feliz

[<assembly: InternalsVisibleTo("{{ElmishLandAppProjectFullName}}")>]
do()

type Layout<'sharedMsg, 'layoutModel, 'layoutMsg> =
    internal {
        Init: unit -> 'layoutModel * Command<'layoutMsg, 'sharedMsg, 'layoutMsg>
        Update: 'layoutMsg -> 'layoutModel -> 'layoutModel * Command<'layoutMsg, 'sharedMsg, 'layoutMsg>
        RouteChanged: 'layoutModel -> 'layoutModel * Command<'layoutMsg, 'sharedMsg, 'layoutMsg>
        View: 'layoutModel -> {{ViewType}} -> ('layoutMsg -> unit) -> {{ViewType}}
        Subscriptions: 'layoutModel -> (string list * (('layoutMsg -> unit) -> System.IDisposable)) list
    }

module Layout =
    let from init update routeChanged view =
        {
            Init = init
            Update = update
            RouteChanged = routeChanged
            View = view
            Subscriptions = fun _ -> []
        }

    let withSubscriptions subscriptions (layout: Layout<'sharedMsg, 'layoutModel, 'layoutMsg>) =
        { layout with Subscriptions = subscriptions }
